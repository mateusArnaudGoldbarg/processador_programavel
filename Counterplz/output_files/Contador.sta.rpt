TimeQuest Timing Analyzer report for Contador
Mon Dec 03 18:01:12 2018
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk_cpu'
 12. Slow Model Setup: 'ctrl:controller|alu_sct_ctrl[0]'
 13. Slow Model Hold: 'ctrl:controller|alu_sct_ctrl[0]'
 14. Slow Model Hold: 'clk_cpu'
 15. Slow Model Minimum Pulse Width: 'clk_cpu'
 16. Slow Model Minimum Pulse Width: 'ctrl:controller|alu_sct_ctrl[0]'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'clk_cpu'
 27. Fast Model Setup: 'ctrl:controller|alu_sct_ctrl[0]'
 28. Fast Model Hold: 'clk_cpu'
 29. Fast Model Hold: 'ctrl:controller|alu_sct_ctrl[0]'
 30. Fast Model Minimum Pulse Width: 'clk_cpu'
 31. Fast Model Minimum Pulse Width: 'ctrl:controller|alu_sct_ctrl[0]'
 32. Setup Times
 33. Hold Times
 34. Clock to Output Times
 35. Minimum Clock to Output Times
 36. Multicorner Timing Analysis Summary
 37. Setup Times
 38. Hold Times
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                       ;
+--------------------+----------------------------------------------------+
; Quartus II Version ; Version 13.0.0 Build 156 04/24/2013 SJ Web Edition ;
; Revision Name      ; Contador                                           ;
; Device Family      ; Cyclone II                                         ;
; Device Name        ; EP2C35F672C6                                       ;
; Timing Models      ; Final                                              ;
; Delay Model        ; Combined                                           ;
; Rise/Fall Delays   ; Unavailable                                        ;
+--------------------+----------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                                           ;
+---------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-------------------------------------+
; Clock Name                      ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                             ;
+---------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-------------------------------------+
; clk_cpu                         ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk_cpu }                         ;
; ctrl:controller|alu_sct_ctrl[0] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { ctrl:controller|alu_sct_ctrl[0] } ;
+---------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-------------------------------------+


+------------------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                                  ;
+------------+-----------------+---------------------------------+-------------------------+
; Fmax       ; Restricted Fmax ; Clock Name                      ; Note                    ;
+------------+-----------------+---------------------------------+-------------------------+
; INF MHz    ; 178.64 MHz      ; ctrl:controller|alu_sct_ctrl[0] ; limit due to hold check ;
; 276.09 MHz ; 276.09 MHz      ; clk_cpu                         ;                         ;
+------------+-----------------+---------------------------------+-------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+----------------------------------------------------------+
; Slow Model Setup Summary                                 ;
+---------------------------------+--------+---------------+
; Clock                           ; Slack  ; End Point TNS ;
+---------------------------------+--------+---------------+
; clk_cpu                         ; -2.622 ; -135.433      ;
; ctrl:controller|alu_sct_ctrl[0] ; -0.926 ; -3.461        ;
+---------------------------------+--------+---------------+


+----------------------------------------------------------+
; Slow Model Hold Summary                                  ;
+---------------------------------+--------+---------------+
; Clock                           ; Slack  ; End Point TNS ;
+---------------------------------+--------+---------------+
; ctrl:controller|alu_sct_ctrl[0] ; -2.799 ; -8.102        ;
; clk_cpu                         ; -2.546 ; -21.734       ;
+---------------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------------------------+
; Slow Model Minimum Pulse Width Summary                   ;
+---------------------------------+--------+---------------+
; Clock                           ; Slack  ; End Point TNS ;
+---------------------------------+--------+---------------+
; clk_cpu                         ; -1.380 ; -112.380      ;
; ctrl:controller|alu_sct_ctrl[0] ; 0.500  ; 0.000         ;
+---------------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk_cpu'                                                                                                                         ;
+--------+---------------------------------+------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                       ; To Node                            ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------+------------------------------------+--------------+-------------+--------------+------------+------------+
; -2.622 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|alu:alu1|output_alu[2] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.611     ; 3.047      ;
; -2.619 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|alu:alu1|output_alu[1] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.611     ; 3.044      ;
; -2.614 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|alu:alu1|output_alu[3] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.611     ; 3.039      ;
; -2.487 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|alu:alu1|output_alu[0] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.611     ; 2.912      ;
; -2.487 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|alu:alu1|output_alu[2] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.611     ; 2.912      ;
; -2.484 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|alu:alu1|output_alu[1] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.611     ; 2.909      ;
; -2.479 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|alu:alu1|output_alu[3] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.611     ; 2.904      ;
; -2.386 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|rf_input[0]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.816      ;
; -2.386 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|rf_input[1]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.816      ;
; -2.386 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|rf_input[3]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.816      ;
; -2.386 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|rf_input[2]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.816      ;
; -2.357 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_a_alu[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.787      ;
; -2.357 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_a_alu[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.787      ;
; -2.357 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_a_alu[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.787      ;
; -2.357 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_a_alu[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.787      ;
; -2.352 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|alu:alu1|output_alu[0] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.611     ; 2.777      ;
; -2.231 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|rf_input[0]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.661      ;
; -2.231 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|rf_input[1]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.661      ;
; -2.231 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|rf_input[3]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.661      ;
; -2.231 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|rf_input[2]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.661      ;
; -2.192 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_b_alu[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.622      ;
; -2.192 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|acc_input[3]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.622      ;
; -2.192 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|acc_input[1]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.622      ;
; -2.192 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|acc_input[0]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.622      ;
; -2.192 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_b_alu[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.622      ;
; -2.192 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_b_alu[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.622      ;
; -2.192 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_b_alu[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.622      ;
; -2.192 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|acc_input[2]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.622      ;
; -2.182 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_a_alu[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.612      ;
; -2.182 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_a_alu[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.612      ;
; -2.182 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_a_alu[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.612      ;
; -2.182 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_a_alu[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.612      ;
; -2.151 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|rf_input[0]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.581      ;
; -2.151 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|rf_input[1]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.581      ;
; -2.151 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|rf_input[3]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.581      ;
; -2.151 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|rf_input[2]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.581      ;
; -2.132 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|alu:alu1|output_alu[0] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.611     ; 2.557      ;
; -2.127 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|alu:alu1|output_alu[3] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.611     ; 2.552      ;
; -2.101 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_a_alu[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.531      ;
; -2.101 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_a_alu[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.531      ;
; -2.101 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_a_alu[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.531      ;
; -2.101 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_a_alu[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.531      ;
; -2.083 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_b_alu[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.513      ;
; -2.083 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|acc_input[3]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.513      ;
; -2.083 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|acc_input[1]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.513      ;
; -2.083 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|acc_input[0]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.513      ;
; -2.083 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_b_alu[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.513      ;
; -2.083 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_b_alu[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.513      ;
; -2.083 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_b_alu[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.513      ;
; -2.083 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|acc_input[2]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.513      ;
; -2.018 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|alu:alu1|output_alu[2] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.611     ; 2.443      ;
; -2.014 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|alu:alu1|output_alu[1] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.611     ; 2.439      ;
; -1.879 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_b_alu[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.309      ;
; -1.879 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|acc_input[3]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.309      ;
; -1.879 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|acc_input[1]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.309      ;
; -1.879 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|acc_input[0]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.309      ;
; -1.879 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_b_alu[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.309      ;
; -1.879 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_b_alu[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.309      ;
; -1.879 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_b_alu[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.309      ;
; -1.879 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|acc_input[2]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.309      ;
; -1.831 ; dp:datapath|input_b_alu[1]      ; dp:datapath|alu:alu1|output_alu[1] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.005     ; 2.862      ;
; -1.817 ; ctrl:controller|state.s6        ; ctrl:controller|rf_sel_ctrl[0]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 2.853      ;
; -1.817 ; ctrl:controller|state.s6        ; ctrl:controller|rf_sel_ctrl[1]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 2.853      ;
; -1.807 ; dp:datapath|input_b_alu[3]      ; dp:datapath|alu:alu1|output_alu[3] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.005     ; 2.838      ;
; -1.804 ; dp:datapath|input_b_alu[2]      ; dp:datapath|alu:alu1|output_alu[2] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.005     ; 2.835      ;
; -1.755 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|output_dp[3]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.185      ;
; -1.754 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|output_dp[0]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.184      ;
; -1.754 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|output_dp[1]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.184      ;
; -1.754 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|output_dp[2]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.184      ;
; -1.706 ; ctrl:controller|state.s3        ; ctrl:controller|rf_sel_ctrl[0]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 2.743      ;
; -1.706 ; ctrl:controller|state.s3        ; ctrl:controller|rf_sel_ctrl[1]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 2.743      ;
; -1.703 ; dp:datapath|input_b_alu[0]      ; dp:datapath|alu:alu1|output_alu[0] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.005     ; 2.734      ;
; -1.672 ; ctrl:controller|state.s0        ; ctrl:controller|rf_sel_ctrl[0]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 2.708      ;
; -1.672 ; ctrl:controller|state.s0        ; ctrl:controller|rf_sel_ctrl[1]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 2.708      ;
; -1.656 ; ctrl:controller|state.s1        ; ctrl:controller|rf_sel_ctrl[0]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 2.693      ;
; -1.656 ; ctrl:controller|state.s1        ; ctrl:controller|rf_sel_ctrl[1]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 2.693      ;
; -1.621 ; ctrl:controller|OPCODE[2]       ; ctrl:controller|state.done         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.003     ; 2.654      ;
; -1.593 ; ctrl:controller|state.s3        ; ctrl:controller|alu_sct_ctrl[0]    ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.006     ; 2.623      ;
; -1.586 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|output_dp[3]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.016      ;
; -1.585 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|output_dp[0]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.015      ;
; -1.585 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|output_dp[1]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.015      ;
; -1.585 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|output_dp[2]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 2.015      ;
; -1.559 ; ctrl:controller|state.s0        ; ctrl:controller|alu_sct_ctrl[0]    ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.007     ; 2.588      ;
; -1.543 ; ctrl:controller|state.s1        ; ctrl:controller|alu_sct_ctrl[0]    ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.006     ; 2.573      ;
; -1.515 ; ctrl:controller|state.s7        ; ctrl:controller|alu_sct_ctrl[0]    ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.007     ; 2.544      ;
; -1.504 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|output_dp[3]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 1.934      ;
; -1.503 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|output_dp[0]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 1.933      ;
; -1.503 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|output_dp[1]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 1.933      ;
; -1.503 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|output_dp[2]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.606     ; 1.933      ;
; -1.481 ; ctrl:controller|state.s11       ; ctrl:controller|alu_sct_ctrl[0]    ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.007     ; 2.510      ;
; -1.464 ; ctrl:controller|rf_sel_ctrl[1]  ; dp:datapath|rf:rf1|out2[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 2.500      ;
; -1.464 ; ctrl:controller|rf_sel_ctrl[1]  ; dp:datapath|rf:rf1|out2[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 2.500      ;
; -1.464 ; ctrl:controller|rf_sel_ctrl[1]  ; dp:datapath|rf:rf1|out2[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 2.500      ;
; -1.464 ; ctrl:controller|rf_sel_ctrl[1]  ; dp:datapath|rf:rf1|out2[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 2.500      ;
; -1.455 ; dp:datapath|input_a_alu[2]      ; dp:datapath|alu:alu1|output_alu[2] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.005     ; 2.486      ;
; -1.437 ; dp:datapath|input_a_alu[1]      ; dp:datapath|alu:alu1|output_alu[1] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.005     ; 2.468      ;
; -1.395 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out2[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 2.432      ;
; -1.395 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out2[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 2.432      ;
; -1.395 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out2[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 2.432      ;
; -1.395 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out2[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 2.432      ;
+--------+---------------------------------+------------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'ctrl:controller|alu_sct_ctrl[0]'                                                                                                                                 ;
+--------+---------------------------------+-----------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; Slack  ; From Node                       ; To Node                     ; Launch Clock                    ; Latch Clock                     ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------+-----------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; -0.926 ; ctrl:controller|alu_sct_ctrl[1] ; bcd7seg:bcd7seg_com|hex3[0] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.553      ; 1.469      ;
; -0.892 ; ctrl:controller|alu_sct_ctrl[1] ; bcd7seg:bcd7seg_com|hex1[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.562      ; 1.481      ;
; -0.695 ; ctrl:controller|alu_sct_ctrl[3] ; bcd7seg:bcd7seg_com|hex0[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.563      ; 1.254      ;
; -0.614 ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex3[0] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.553      ; 1.157      ;
; -0.611 ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex2[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.539      ; 1.175      ;
; -0.579 ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex0[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.563      ; 1.138      ;
; -0.571 ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex1[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.562      ; 1.160      ;
; -0.337 ; ctrl:controller|alu_sct_ctrl[3] ; bcd7seg:bcd7seg_com|hex3[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.396      ; 1.032      ;
; 2.141  ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex3[0] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 0.500        ; 3.850      ; 1.449      ;
; 2.148  ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex0[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 0.500        ; 3.860      ; 1.458      ;
; 2.326  ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex1[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 0.500        ; 3.859      ; 1.310      ;
; 2.641  ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex3[0] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 3.850      ; 1.449      ;
; 2.648  ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex0[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 3.860      ; 1.458      ;
; 2.826  ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex1[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 3.859      ; 1.310      ;
+--------+---------------------------------+-----------------------------+---------------------------------+---------------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'ctrl:controller|alu_sct_ctrl[0]'                                                                                                                                  ;
+--------+---------------------------------+-----------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; Slack  ; From Node                       ; To Node                     ; Launch Clock                    ; Latch Clock                     ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------+-----------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; -2.799 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex1[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 3.859      ; 1.310      ;
; -2.652 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex0[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 3.860      ; 1.458      ;
; -2.651 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex3[0] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 3.850      ; 1.449      ;
; -2.299 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex1[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; -0.500       ; 3.859      ; 1.310      ;
; -2.152 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex0[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; -0.500       ; 3.860      ; 1.458      ;
; -2.151 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex3[0] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; -0.500       ; 3.850      ; 1.449      ;
; 0.575  ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex0[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.563      ; 1.138      ;
; 0.598  ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex1[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.562      ; 1.160      ;
; 0.604  ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex3[0] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.553      ; 1.157      ;
; 0.636  ; ctrl:controller|alu_sct_ctrl[3] ; bcd7seg:bcd7seg_com|hex3[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.396      ; 1.032      ;
; 0.636  ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex2[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.539      ; 1.175      ;
; 0.691  ; ctrl:controller|alu_sct_ctrl[3] ; bcd7seg:bcd7seg_com|hex0[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.563      ; 1.254      ;
; 0.916  ; ctrl:controller|alu_sct_ctrl[1] ; bcd7seg:bcd7seg_com|hex3[0] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.553      ; 1.469      ;
; 0.919  ; ctrl:controller|alu_sct_ctrl[1] ; bcd7seg:bcd7seg_com|hex1[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.562      ; 1.481      ;
+--------+---------------------------------+-----------------------------+---------------------------------+---------------------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk_cpu'                                                                                                                                                   ;
+--------+---------------------------------+------------------------------------------+---------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                       ; To Node                                  ; Launch Clock                    ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------+------------------------------------------+---------------------------------+-------------+--------------+------------+------------+
; -2.546 ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0]          ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.687      ; 0.657      ;
; -2.046 ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0]          ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.687      ; 0.657      ;
; -1.441 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[2]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.686      ; 1.761      ;
; -1.435 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[1]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.686      ; 1.767      ;
; -1.434 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[0]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.686      ; 1.768      ;
; -1.270 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[3]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.686      ; 1.932      ;
; -1.215 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[1]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 1.992      ;
; -1.215 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[3]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 1.992      ;
; -1.213 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[2]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 1.994      ;
; -1.210 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[0]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 1.997      ;
; -1.014 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[0]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.193      ;
; -1.014 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[1]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.193      ;
; -1.014 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[2]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.193      ;
; -1.013 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[3]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.194      ;
; -0.941 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[2]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.686      ; 1.761      ;
; -0.935 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[1]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.686      ; 1.767      ;
; -0.934 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[0]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.686      ; 1.768      ;
; -0.770 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[3]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.686      ; 1.932      ;
; -0.715 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[1]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 1.992      ;
; -0.715 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[3]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 1.992      ;
; -0.713 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[2]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 1.994      ;
; -0.710 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[0]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 1.997      ;
; -0.514 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[0]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.193      ;
; -0.514 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[1]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.193      ;
; -0.514 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[2]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.193      ;
; -0.513 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[3]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.194      ;
; -0.435 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[3]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.772      ;
; -0.435 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[1]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.772      ;
; -0.435 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[0]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.772      ;
; -0.435 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[2]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.772      ;
; -0.419 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[3]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.788      ;
; -0.419 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[1]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.788      ;
; -0.419 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[0]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.788      ;
; -0.419 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[2]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.788      ;
; -0.321 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[0]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.886      ;
; -0.321 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[1]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.886      ;
; -0.321 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[3]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.886      ;
; -0.321 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[2]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 2.691      ; 2.886      ;
; 0.065  ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[3]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.772      ;
; 0.065  ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[1]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.772      ;
; 0.065  ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[0]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.772      ;
; 0.065  ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[2]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.772      ;
; 0.081  ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[3]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.788      ;
; 0.081  ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[1]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.788      ;
; 0.081  ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[0]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.788      ;
; 0.081  ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[2]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.788      ;
; 0.179  ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[0]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.886      ;
; 0.179  ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[1]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.886      ;
; 0.179  ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[3]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.886      ;
; 0.179  ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[2]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 2.691      ; 2.886      ;
; 0.391  ; ctrl:controller|state.s0        ; ctrl:controller|state.s0                 ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|state.done      ; ctrl:controller|state.done               ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|rf_enb_ctrl     ; ctrl:controller|rf_enb_ctrl              ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|imm[2]          ; ctrl:controller|imm[2]                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|imm[3]          ; ctrl:controller|imm[3]                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|imm[1]          ; ctrl:controller|imm[1]                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|acc_enb_ctrl    ; ctrl:controller|acc_enb_ctrl             ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|imm[0]          ; ctrl:controller|imm[0]                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|IR[0]           ; ctrl:controller|IR[0]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|IR[1]           ; ctrl:controller|IR[1]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|IR[2]           ; ctrl:controller|IR[2]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|IR[7]           ; ctrl:controller|IR[7]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|IR[4]           ; ctrl:controller|IR[4]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|IR[5]           ; ctrl:controller|IR[5]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|IR[6]           ; ctrl:controller|IR[6]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|alu_sct_ctrl[1] ; ctrl:controller|alu_sct_ctrl[1]          ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|alu_sct_ctrl[3] ; ctrl:controller|alu_sct_ctrl[3]          ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; ctrl:controller|alu_sct_ctrl[2] ; ctrl:controller|alu_sct_ctrl[2]          ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.657      ;
; 0.517  ; dp:datapath|rf:rf1|out2[2]      ; dp:datapath|rf:rf1|output_rf[2]          ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.783      ;
; 0.546  ; ctrl:controller|PC[2]           ; ctrl:controller|IR[7]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.812      ;
; 0.551  ; ctrl:controller|PC[0]           ; ctrl:controller|IR[5]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.817      ;
; 0.554  ; ctrl:controller|PC[0]           ; ctrl:controller|IR[0]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.820      ;
; 0.554  ; ctrl:controller|PC[0]           ; ctrl:controller|IR[1]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.820      ;
; 0.570  ; dp:datapath|output_dp[0]        ; e~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.836      ;
; 0.571  ; dp:datapath|output_dp[0]        ; b~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.837      ;
; 0.571  ; dp:datapath|output_dp[0]        ; c~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.837      ;
; 0.571  ; dp:datapath|output_dp[0]        ; d~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.837      ;
; 0.571  ; dp:datapath|output_dp[0]        ; f~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.837      ;
; 0.571  ; dp:datapath|output_dp[0]        ; g~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.837      ;
; 0.572  ; dp:datapath|output_dp[0]        ; a~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.838      ;
; 0.649  ; dp:datapath|rf:rf1|out2[0]      ; dp:datapath|rf:rf1|output_rf[0]          ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.915      ;
; 0.669  ; dp:datapath|acc_input[0]        ; dp:datapath|acc:acumulador|output_acc[0] ; clk_cpu                         ; clk_cpu     ; 0.000        ; -0.001     ; 0.934      ;
; 0.705  ; dp:datapath|acc_input[1]        ; dp:datapath|acc:acumulador|output_acc[1] ; clk_cpu                         ; clk_cpu     ; 0.000        ; -0.001     ; 0.970      ;
; 0.707  ; dp:datapath|acc_input[3]        ; dp:datapath|acc:acumulador|output_acc[3] ; clk_cpu                         ; clk_cpu     ; 0.000        ; -0.001     ; 0.972      ;
; 0.709  ; dp:datapath|acc_input[2]        ; dp:datapath|acc:acumulador|output_acc[2] ; clk_cpu                         ; clk_cpu     ; 0.000        ; -0.001     ; 0.974      ;
; 0.713  ; ctrl:controller|ADDRESS[1]      ; ctrl:controller|PC[1]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.979      ;
; 0.725  ; dp:datapath|output_dp[3]        ; e~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.991      ;
; 0.725  ; dp:datapath|output_dp[3]        ; d~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.991      ;
; 0.726  ; dp:datapath|output_dp[3]        ; f~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.992      ;
; 0.727  ; dp:datapath|output_dp[3]        ; a~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.993      ;
; 0.737  ; dp:datapath|output_dp[3]        ; b~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 1.003      ;
; 0.737  ; dp:datapath|output_dp[3]        ; c~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 1.003      ;
; 0.737  ; dp:datapath|output_dp[3]        ; g~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 1.003      ;
; 0.766  ; ctrl:controller|PC[0]           ; ctrl:controller|ADDRESS[0]               ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 1.032      ;
; 0.767  ; ctrl:controller|PC[0]           ; ctrl:controller|ADDRESS[1]               ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 1.033      ;
; 0.770  ; ctrl:controller|PC[0]           ; ctrl:controller|OPCODE[1]                ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 1.036      ;
; 0.773  ; ctrl:controller|PC[0]           ; ctrl:controller|OPCODE[2]                ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 1.039      ;
; 0.773  ; ctrl:controller|state.s0        ; ctrl:controller|imm[2]                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; -0.001     ; 1.038      ;
; 0.780  ; ctrl:controller|IR[2]           ; ctrl:controller|irs[2]                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 1.046      ;
; 0.780  ; ctrl:controller|IR[4]           ; ctrl:controller|irs[4]                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 1.046      ;
+--------+---------------------------------+------------------------------------------+---------------------------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk_cpu'                                                                          ;
+--------+--------------+----------------+------------------+---------+------------+---------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock   ; Clock Edge ; Target                          ;
+--------+--------------+----------------+------------------+---------+------------+---------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk_cpu ; Rise       ; clk_cpu                         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; a~reg0                          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; a~reg0                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; b~reg0                          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; b~reg0                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[2]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[2]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[4]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[4]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[5]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[5]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[6]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[6]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[7]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[7]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|OPCODE[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|OPCODE[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|OPCODE[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|OPCODE[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|OPCODE[2]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|OPCODE[2]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|PC[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|PC[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|PC[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|PC[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|PC[2]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|PC[2]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|acc_enb_ctrl    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|acc_enb_ctrl    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|imm[0]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|imm[0]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|imm[1]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|imm[1]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|imm[2]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|imm[2]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|imm[3]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|imm[3]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[0]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[0]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[1]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[1]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[2]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[2]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[3]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[3]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[4]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[4]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[5]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[5]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[6]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[6]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[7]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[7]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|rf_enb_ctrl     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|rf_enb_ctrl     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|rf_sel_ctrl[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|rf_sel_ctrl[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|rf_sel_ctrl[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|rf_sel_ctrl[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.done      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.done      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s0        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s0        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s1        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s1        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s10       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s10       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s11       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s11       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s12       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s12       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s13       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s13       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s2        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s2        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s3        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s3        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s4        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s4        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s5        ;
+--------+--------------+----------------+------------------+---------+------------+---------------------------------+


+----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'ctrl:controller|alu_sct_ctrl[0]'                                                                            ;
+-------+--------------+----------------+------------------+---------------------------------+------------+------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                           ; Clock Edge ; Target                             ;
+-------+--------------+----------------+------------------+---------------------------------+------------+------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex0[1]        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex0[1]        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex1[1]        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex1[1]        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex2[1]        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex2[1]        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex3[0]        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex3[0]        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex3[1]        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex3[1]        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex0[1]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex0[1]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex1[1]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex1[1]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex2[1]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex2[1]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex3[0]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex3[0]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex3[1]|datad          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex3[1]|datad          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; controller|alu_sct_ctrl[0]|regout  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; controller|alu_sct_ctrl[0]|regout  ;
+-------+--------------+----------------+------------------+---------------------------------+------------+------------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; rst_cpu   ; clk_cpu    ; 2.416 ; 2.416 ; Rise       ; clk_cpu         ;
; start_cpu ; clk_cpu    ; 0.368 ; 0.368 ; Rise       ; clk_cpu         ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; rst_cpu   ; clk_cpu    ; -0.283 ; -0.283 ; Rise       ; clk_cpu         ;
; start_cpu ; clk_cpu    ; 0.858  ; 0.858  ; Rise       ; clk_cpu         ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                           ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+
; Data Port      ; Clock Port                      ; Rise  ; Fall  ; Clock Edge ; Clock Reference                 ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+
; IRds[*]        ; clk_cpu                         ; 6.850 ; 6.850 ; Rise       ; clk_cpu                         ;
;  IRds[0]       ; clk_cpu                         ; 6.850 ; 6.850 ; Rise       ; clk_cpu                         ;
;  IRds[1]       ; clk_cpu                         ; 6.352 ; 6.352 ; Rise       ; clk_cpu                         ;
;  IRds[2]       ; clk_cpu                         ; 6.636 ; 6.636 ; Rise       ; clk_cpu                         ;
;  IRds[3]       ; clk_cpu                         ; 6.362 ; 6.362 ; Rise       ; clk_cpu                         ;
;  IRds[4]       ; clk_cpu                         ; 6.414 ; 6.414 ; Rise       ; clk_cpu                         ;
;  IRds[5]       ; clk_cpu                         ; 6.628 ; 6.628 ; Rise       ; clk_cpu                         ;
;  IRds[6]       ; clk_cpu                         ; 6.423 ; 6.423 ; Rise       ; clk_cpu                         ;
;  IRds[7]       ; clk_cpu                         ; 6.605 ; 6.605 ; Rise       ; clk_cpu                         ;
; a              ; clk_cpu                         ; 6.444 ; 6.444 ; Rise       ; clk_cpu                         ;
; b              ; clk_cpu                         ; 6.891 ; 6.891 ; Rise       ; clk_cpu                         ;
; c              ; clk_cpu                         ; 6.446 ; 6.446 ; Rise       ; clk_cpu                         ;
; d              ; clk_cpu                         ; 6.448 ; 6.448 ; Rise       ; clk_cpu                         ;
; e              ; clk_cpu                         ; 6.677 ; 6.677 ; Rise       ; clk_cpu                         ;
; f              ; clk_cpu                         ; 6.441 ; 6.441 ; Rise       ; clk_cpu                         ;
; g              ; clk_cpu                         ; 6.916 ; 6.916 ; Rise       ; clk_cpu                         ;
; output_cpu[*]  ; clk_cpu                         ; 6.856 ; 6.856 ; Rise       ; clk_cpu                         ;
;  output_cpu[0] ; clk_cpu                         ; 6.620 ; 6.620 ; Rise       ; clk_cpu                         ;
;  output_cpu[1] ; clk_cpu                         ; 6.856 ; 6.856 ; Rise       ; clk_cpu                         ;
;  output_cpu[2] ; clk_cpu                         ; 6.721 ; 6.721 ; Rise       ; clk_cpu                         ;
;  output_cpu[3] ; clk_cpu                         ; 6.644 ; 6.644 ; Rise       ; clk_cpu                         ;
; hex0[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 7.794 ; 7.794 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.740 ; 7.740 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.772 ; 7.772 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.794 ; 7.794 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.784 ; 7.784 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.784 ; 7.784 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex1[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 8.063 ; 8.063 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.740 ; 7.740 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 8.034 ; 8.034 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 8.034 ; 8.034 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 8.063 ; 8.063 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 8.063 ; 8.063 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex2[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 7.995 ; 7.995 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.548 ; 7.548 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.960 ; 7.960 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.960 ; 7.960 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.995 ; 7.995 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.995 ; 7.995 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex3[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 7.548 ; 7.548 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.548 ; 7.548 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.387 ; 7.387 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.387 ; 7.387 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.377 ; 7.377 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.377 ; 7.377 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+


+-----------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                   ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+
; Data Port      ; Clock Port                      ; Rise  ; Fall  ; Clock Edge ; Clock Reference                 ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+
; IRds[*]        ; clk_cpu                         ; 6.352 ; 6.352 ; Rise       ; clk_cpu                         ;
;  IRds[0]       ; clk_cpu                         ; 6.850 ; 6.850 ; Rise       ; clk_cpu                         ;
;  IRds[1]       ; clk_cpu                         ; 6.352 ; 6.352 ; Rise       ; clk_cpu                         ;
;  IRds[2]       ; clk_cpu                         ; 6.636 ; 6.636 ; Rise       ; clk_cpu                         ;
;  IRds[3]       ; clk_cpu                         ; 6.362 ; 6.362 ; Rise       ; clk_cpu                         ;
;  IRds[4]       ; clk_cpu                         ; 6.414 ; 6.414 ; Rise       ; clk_cpu                         ;
;  IRds[5]       ; clk_cpu                         ; 6.628 ; 6.628 ; Rise       ; clk_cpu                         ;
;  IRds[6]       ; clk_cpu                         ; 6.423 ; 6.423 ; Rise       ; clk_cpu                         ;
;  IRds[7]       ; clk_cpu                         ; 6.605 ; 6.605 ; Rise       ; clk_cpu                         ;
; a              ; clk_cpu                         ; 6.444 ; 6.444 ; Rise       ; clk_cpu                         ;
; b              ; clk_cpu                         ; 6.891 ; 6.891 ; Rise       ; clk_cpu                         ;
; c              ; clk_cpu                         ; 6.446 ; 6.446 ; Rise       ; clk_cpu                         ;
; d              ; clk_cpu                         ; 6.448 ; 6.448 ; Rise       ; clk_cpu                         ;
; e              ; clk_cpu                         ; 6.677 ; 6.677 ; Rise       ; clk_cpu                         ;
; f              ; clk_cpu                         ; 6.441 ; 6.441 ; Rise       ; clk_cpu                         ;
; g              ; clk_cpu                         ; 6.916 ; 6.916 ; Rise       ; clk_cpu                         ;
; output_cpu[*]  ; clk_cpu                         ; 6.620 ; 6.620 ; Rise       ; clk_cpu                         ;
;  output_cpu[0] ; clk_cpu                         ; 6.620 ; 6.620 ; Rise       ; clk_cpu                         ;
;  output_cpu[1] ; clk_cpu                         ; 6.856 ; 6.856 ; Rise       ; clk_cpu                         ;
;  output_cpu[2] ; clk_cpu                         ; 6.721 ; 6.721 ; Rise       ; clk_cpu                         ;
;  output_cpu[3] ; clk_cpu                         ; 6.644 ; 6.644 ; Rise       ; clk_cpu                         ;
; hex0[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 7.740 ; 7.740 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.740 ; 7.740 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.772 ; 7.772 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.794 ; 7.794 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.784 ; 7.784 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.784 ; 7.784 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex1[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 7.740 ; 7.740 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.740 ; 7.740 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 8.034 ; 8.034 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 8.034 ; 8.034 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 8.063 ; 8.063 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 8.063 ; 8.063 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex2[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 7.548 ; 7.548 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.548 ; 7.548 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.960 ; 7.960 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.960 ; 7.960 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.995 ; 7.995 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.995 ; 7.995 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex3[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 7.377 ; 7.377 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.548 ; 7.548 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.387 ; 7.387 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.387 ; 7.387 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.377 ; 7.377 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.377 ; 7.377 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+


+----------------------------------------------------------+
; Fast Model Setup Summary                                 ;
+---------------------------------+--------+---------------+
; Clock                           ; Slack  ; End Point TNS ;
+---------------------------------+--------+---------------+
; clk_cpu                         ; -0.471 ; -13.841       ;
; ctrl:controller|alu_sct_ctrl[0] ; 0.094  ; 0.000         ;
+---------------------------------+--------+---------------+


+----------------------------------------------------------+
; Fast Model Hold Summary                                  ;
+---------------------------------+--------+---------------+
; Clock                           ; Slack  ; End Point TNS ;
+---------------------------------+--------+---------------+
; clk_cpu                         ; -1.586 ; -21.017       ;
; ctrl:controller|alu_sct_ctrl[0] ; -1.543 ; -4.486        ;
+---------------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------------------------+
; Fast Model Minimum Pulse Width Summary                   ;
+---------------------------------+--------+---------------+
; Clock                           ; Slack  ; End Point TNS ;
+---------------------------------+--------+---------------+
; clk_cpu                         ; -1.380 ; -112.380      ;
; ctrl:controller|alu_sct_ctrl[0] ; 0.500  ; 0.000         ;
+---------------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk_cpu'                                                                                                                         ;
+--------+---------------------------------+------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                       ; To Node                            ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------+------------------------------------+--------------+-------------+--------------+------------+------------+
; -0.471 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|rf_input[0]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.380      ;
; -0.471 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|rf_input[1]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.380      ;
; -0.471 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|rf_input[3]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.380      ;
; -0.471 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|rf_input[2]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.380      ;
; -0.452 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_a_alu[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.361      ;
; -0.452 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_a_alu[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.361      ;
; -0.452 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_a_alu[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.361      ;
; -0.452 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_a_alu[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.361      ;
; -0.440 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|alu:alu1|output_alu[2] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.129     ; 1.343      ;
; -0.435 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|alu:alu1|output_alu[1] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.129     ; 1.338      ;
; -0.429 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|alu:alu1|output_alu[3] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.129     ; 1.332      ;
; -0.405 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|rf_input[0]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.314      ;
; -0.405 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|rf_input[1]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.314      ;
; -0.405 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|rf_input[3]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.314      ;
; -0.405 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|rf_input[2]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.314      ;
; -0.388 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|alu:alu1|output_alu[2] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.129     ; 1.291      ;
; -0.384 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|rf_input[0]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.293      ;
; -0.384 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|rf_input[1]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.293      ;
; -0.384 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|rf_input[3]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.293      ;
; -0.384 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|rf_input[2]            ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.293      ;
; -0.383 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|alu:alu1|output_alu[1] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.129     ; 1.286      ;
; -0.379 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|alu:alu1|output_alu[0] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.129     ; 1.282      ;
; -0.377 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|alu:alu1|output_alu[3] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.129     ; 1.280      ;
; -0.368 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_b_alu[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.277      ;
; -0.368 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|acc_input[3]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.277      ;
; -0.368 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|acc_input[1]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.277      ;
; -0.368 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|acc_input[0]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.277      ;
; -0.368 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_b_alu[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.277      ;
; -0.368 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_b_alu[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.277      ;
; -0.368 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|input_b_alu[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.277      ;
; -0.368 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|acc_input[2]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.277      ;
; -0.364 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_a_alu[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.273      ;
; -0.364 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_a_alu[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.273      ;
; -0.364 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_a_alu[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.273      ;
; -0.364 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_a_alu[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.273      ;
; -0.352 ; ctrl:controller|state.s6        ; ctrl:controller|rf_sel_ctrl[0]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 1.384      ;
; -0.352 ; ctrl:controller|state.s6        ; ctrl:controller|rf_sel_ctrl[1]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 1.384      ;
; -0.345 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_a_alu[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.254      ;
; -0.345 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_a_alu[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.254      ;
; -0.345 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_a_alu[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.254      ;
; -0.345 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_a_alu[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.254      ;
; -0.333 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_b_alu[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.242      ;
; -0.333 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|acc_input[3]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.242      ;
; -0.333 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|acc_input[1]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.242      ;
; -0.333 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|acc_input[0]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.242      ;
; -0.333 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_b_alu[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.242      ;
; -0.333 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_b_alu[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.242      ;
; -0.333 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|input_b_alu[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.242      ;
; -0.333 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|acc_input[2]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.242      ;
; -0.327 ; ctrl:controller|alu_sct_ctrl[1] ; dp:datapath|alu:alu1|output_alu[0] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.129     ; 1.230      ;
; -0.312 ; ctrl:controller|state.s3        ; ctrl:controller|rf_sel_ctrl[0]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.345      ;
; -0.312 ; ctrl:controller|state.s3        ; ctrl:controller|rf_sel_ctrl[1]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.345      ;
; -0.297 ; ctrl:controller|state.s1        ; ctrl:controller|rf_sel_ctrl[0]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.330      ;
; -0.297 ; ctrl:controller|state.s1        ; ctrl:controller|rf_sel_ctrl[1]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.330      ;
; -0.293 ; ctrl:controller|state.s0        ; ctrl:controller|rf_sel_ctrl[0]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 1.325      ;
; -0.293 ; ctrl:controller|state.s0        ; ctrl:controller|rf_sel_ctrl[1]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 1.325      ;
; -0.278 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|alu:alu1|output_alu[0] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.129     ; 1.181      ;
; -0.275 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|alu:alu1|output_alu[3] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.129     ; 1.178      ;
; -0.265 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_b_alu[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.174      ;
; -0.265 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|acc_input[3]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.174      ;
; -0.265 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|acc_input[1]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.174      ;
; -0.265 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|acc_input[0]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.174      ;
; -0.265 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_b_alu[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.174      ;
; -0.265 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_b_alu[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.174      ;
; -0.265 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|input_b_alu[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.174      ;
; -0.265 ; ctrl:controller|alu_sct_ctrl[3] ; dp:datapath|acc_input[2]           ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.123     ; 1.174      ;
; -0.247 ; dp:datapath|input_b_alu[2]      ; dp:datapath|alu:alu1|output_alu[2] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.006     ; 1.273      ;
; -0.246 ; dp:datapath|input_b_alu[1]      ; dp:datapath|alu:alu1|output_alu[1] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.006     ; 1.272      ;
; -0.246 ; dp:datapath|input_b_alu[3]      ; dp:datapath|alu:alu1|output_alu[3] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.006     ; 1.272      ;
; -0.228 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|alu:alu1|output_alu[2] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.129     ; 1.131      ;
; -0.222 ; ctrl:controller|alu_sct_ctrl[2] ; dp:datapath|alu:alu1|output_alu[1] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.129     ; 1.125      ;
; -0.215 ; dp:datapath|input_b_alu[0]      ; dp:datapath|alu:alu1|output_alu[0] ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.006     ; 1.241      ;
; -0.204 ; ctrl:controller|rf_sel_ctrl[1]  ; dp:datapath|rf:rf1|out2[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 1.236      ;
; -0.204 ; ctrl:controller|rf_sel_ctrl[1]  ; dp:datapath|rf:rf1|out2[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 1.236      ;
; -0.204 ; ctrl:controller|rf_sel_ctrl[1]  ; dp:datapath|rf:rf1|out2[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 1.236      ;
; -0.204 ; ctrl:controller|rf_sel_ctrl[1]  ; dp:datapath|rf:rf1|out2[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.000      ; 1.236      ;
; -0.189 ; ctrl:controller|OPCODE[2]       ; ctrl:controller|state.done         ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.003     ; 1.218      ;
; -0.187 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out2[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.220      ;
; -0.187 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out2[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.220      ;
; -0.187 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out2[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.220      ;
; -0.187 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out2[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.220      ;
; -0.182 ; ctrl:controller|state.s3        ; ctrl:controller|alu_sct_ctrl[0]    ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.007     ; 1.207      ;
; -0.167 ; ctrl:controller|state.s1        ; ctrl:controller|alu_sct_ctrl[0]    ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.007     ; 1.192      ;
; -0.163 ; ctrl:controller|state.s0        ; ctrl:controller|alu_sct_ctrl[0]    ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.008     ; 1.187      ;
; -0.161 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out1[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.194      ;
; -0.161 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out1[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.194      ;
; -0.161 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out1[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.194      ;
; -0.161 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out1[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.194      ;
; -0.156 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out3[0]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.189      ;
; -0.156 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out3[1]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.189      ;
; -0.156 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out3[3]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.189      ;
; -0.156 ; ctrl:controller|rf_enb_ctrl     ; dp:datapath|rf:rf1|out3[2]         ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.189      ;
; -0.154 ; ctrl:controller|state.s2        ; ctrl:controller|rf_sel_ctrl[0]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.187      ;
; -0.154 ; ctrl:controller|state.s2        ; ctrl:controller|rf_sel_ctrl[1]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.187      ;
; -0.140 ; ctrl:controller|state.s13       ; ctrl:controller|rf_sel_ctrl[0]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.173      ;
; -0.140 ; ctrl:controller|state.s13       ; ctrl:controller|rf_sel_ctrl[1]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.173      ;
; -0.135 ; ctrl:controller|state.done      ; ctrl:controller|rf_sel_ctrl[0]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.168      ;
; -0.135 ; ctrl:controller|state.done      ; ctrl:controller|rf_sel_ctrl[1]     ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.168      ;
; -0.134 ; ctrl:controller|state.s7        ; ctrl:controller|alu_sct_ctrl[0]    ; clk_cpu      ; clk_cpu     ; 1.000        ; -0.008     ; 1.158      ;
; -0.130 ; ctrl:controller|state.s0        ; ctrl:controller|PC[1]              ; clk_cpu      ; clk_cpu     ; 1.000        ; 0.001      ; 1.163      ;
+--------+---------------------------------+------------------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'ctrl:controller|alu_sct_ctrl[0]'                                                                                                                                ;
+-------+---------------------------------+-----------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; Slack ; From Node                       ; To Node                     ; Launch Clock                    ; Latch Clock                     ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------+-----------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; 0.094 ; ctrl:controller|alu_sct_ctrl[1] ; bcd7seg:bcd7seg_com|hex3[0] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.221      ; 0.701      ;
; 0.138 ; ctrl:controller|alu_sct_ctrl[1] ; bcd7seg:bcd7seg_com|hex1[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.224      ; 0.682      ;
; 0.218 ; ctrl:controller|alu_sct_ctrl[3] ; bcd7seg:bcd7seg_com|hex0[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.225      ; 0.594      ;
; 0.246 ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex2[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.209      ; 0.566      ;
; 0.247 ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex3[0] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.221      ; 0.548      ;
; 0.273 ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex1[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.224      ; 0.547      ;
; 0.275 ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex0[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.225      ; 0.537      ;
; 0.364 ; ctrl:controller|alu_sct_ctrl[3] ; bcd7seg:bcd7seg_com|hex3[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 0.151      ; 0.497      ;
; 1.536 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex3[0] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 0.500        ; 2.009      ; 0.688      ;
; 1.568 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex0[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 0.500        ; 2.013      ; 0.673      ;
; 1.639 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex1[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 0.500        ; 2.012      ; 0.610      ;
; 2.036 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex3[0] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 2.009      ; 0.688      ;
; 2.068 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex0[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 2.013      ; 0.673      ;
; 2.139 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex1[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 1.000        ; 2.012      ; 0.610      ;
+-------+---------------------------------+-----------------------------+---------------------------------+---------------------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk_cpu'                                                                                                                                                   ;
+--------+---------------------------------+------------------------------------------+---------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                       ; To Node                                  ; Launch Clock                    ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------+------------------------------------------+---------------------------------+-------------+--------------+------------+------------+
; -1.586 ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0]          ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.660      ; 0.367      ;
; -1.142 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[2]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.659      ; 0.810      ;
; -1.137 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[1]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.659      ; 0.815      ;
; -1.136 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[0]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.659      ; 0.816      ;
; -1.086 ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0]          ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.660      ; 0.367      ;
; -1.064 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[3]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.659      ; 0.888      ;
; -1.038 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[1]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 0.920      ;
; -1.038 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[3]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 0.920      ;
; -1.035 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[2]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 0.923      ;
; -1.032 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[0]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 0.926      ;
; -0.946 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[3]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.012      ;
; -0.945 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[0]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.013      ;
; -0.945 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[1]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.013      ;
; -0.945 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[2]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.013      ;
; -0.642 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[2]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.659      ; 0.810      ;
; -0.637 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[1]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.659      ; 0.815      ;
; -0.636 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[0]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.659      ; 0.816      ;
; -0.615 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[3]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.343      ;
; -0.615 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[1]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.343      ;
; -0.615 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[0]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.343      ;
; -0.615 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[2]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.343      ;
; -0.608 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[3]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.350      ;
; -0.608 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[1]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.350      ;
; -0.608 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[0]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.350      ;
; -0.608 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[2]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.350      ;
; -0.564 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|alu:alu1|output_alu[3]       ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.659      ; 0.888      ;
; -0.538 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[1]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 0.920      ;
; -0.538 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[3]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 0.920      ;
; -0.535 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[2]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 0.923      ;
; -0.534 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[0]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.424      ;
; -0.534 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[1]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.424      ;
; -0.534 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[3]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.424      ;
; -0.534 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[2]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; 0.000        ; 1.665      ; 1.424      ;
; -0.532 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_b_alu[0]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 0.926      ;
; -0.446 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[3]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.012      ;
; -0.445 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[0]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.013      ;
; -0.445 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[1]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.013      ;
; -0.445 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|output_dp[2]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.013      ;
; -0.115 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[3]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.343      ;
; -0.115 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[1]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.343      ;
; -0.115 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[0]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.343      ;
; -0.115 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|acc_input[2]                 ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.343      ;
; -0.108 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[3]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.350      ;
; -0.108 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[1]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.350      ;
; -0.108 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[0]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.350      ;
; -0.108 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|input_a_alu[2]               ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.350      ;
; -0.034 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[0]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.424      ;
; -0.034 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[1]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.424      ;
; -0.034 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[3]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.424      ;
; -0.034 ; ctrl:controller|alu_sct_ctrl[0] ; dp:datapath|rf_input[2]                  ; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu     ; -0.500       ; 1.665      ; 1.424      ;
; 0.215  ; ctrl:controller|state.s0        ; ctrl:controller|state.s0                 ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|state.done      ; ctrl:controller|state.done               ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|rf_enb_ctrl     ; ctrl:controller|rf_enb_ctrl              ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|imm[2]          ; ctrl:controller|imm[2]                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|imm[3]          ; ctrl:controller|imm[3]                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|imm[1]          ; ctrl:controller|imm[1]                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|acc_enb_ctrl    ; ctrl:controller|acc_enb_ctrl             ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|imm[0]          ; ctrl:controller|imm[0]                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|IR[0]           ; ctrl:controller|IR[0]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|IR[1]           ; ctrl:controller|IR[1]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|IR[2]           ; ctrl:controller|IR[2]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|IR[7]           ; ctrl:controller|IR[7]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|IR[4]           ; ctrl:controller|IR[4]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|IR[5]           ; ctrl:controller|IR[5]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|IR[6]           ; ctrl:controller|IR[6]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|alu_sct_ctrl[1] ; ctrl:controller|alu_sct_ctrl[1]          ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|alu_sct_ctrl[3] ; ctrl:controller|alu_sct_ctrl[3]          ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; ctrl:controller|alu_sct_ctrl[2] ; ctrl:controller|alu_sct_ctrl[2]          ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.367      ;
; 0.237  ; dp:datapath|rf:rf1|out2[2]      ; dp:datapath|rf:rf1|output_rf[2]          ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.389      ;
; 0.253  ; ctrl:controller|PC[2]           ; ctrl:controller|IR[7]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.405      ;
; 0.256  ; ctrl:controller|PC[0]           ; ctrl:controller|IR[5]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.408      ;
; 0.259  ; ctrl:controller|PC[0]           ; ctrl:controller|IR[0]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.411      ;
; 0.259  ; ctrl:controller|PC[0]           ; ctrl:controller|IR[1]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.411      ;
; 0.268  ; dp:datapath|output_dp[0]        ; b~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.420      ;
; 0.268  ; dp:datapath|output_dp[0]        ; c~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.420      ;
; 0.268  ; dp:datapath|output_dp[0]        ; d~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.420      ;
; 0.268  ; dp:datapath|output_dp[0]        ; e~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.420      ;
; 0.268  ; dp:datapath|output_dp[0]        ; f~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.420      ;
; 0.268  ; dp:datapath|output_dp[0]        ; g~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.420      ;
; 0.269  ; dp:datapath|output_dp[0]        ; a~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.421      ;
; 0.287  ; dp:datapath|rf:rf1|out2[0]      ; dp:datapath|rf:rf1|output_rf[0]          ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.439      ;
; 0.314  ; dp:datapath|acc_input[0]        ; dp:datapath|acc:acumulador|output_acc[0] ; clk_cpu                         ; clk_cpu     ; 0.000        ; -0.001     ; 0.465      ;
; 0.323  ; dp:datapath|acc_input[1]        ; dp:datapath|acc:acumulador|output_acc[1] ; clk_cpu                         ; clk_cpu     ; 0.000        ; -0.001     ; 0.474      ;
; 0.324  ; dp:datapath|acc_input[3]        ; dp:datapath|acc:acumulador|output_acc[3] ; clk_cpu                         ; clk_cpu     ; 0.000        ; -0.001     ; 0.475      ;
; 0.326  ; dp:datapath|acc_input[2]        ; dp:datapath|acc:acumulador|output_acc[2] ; clk_cpu                         ; clk_cpu     ; 0.000        ; -0.001     ; 0.477      ;
; 0.328  ; ctrl:controller|ADDRESS[1]      ; ctrl:controller|PC[1]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; -0.001     ; 0.479      ;
; 0.330  ; dp:datapath|output_dp[3]        ; f~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.482      ;
; 0.330  ; dp:datapath|output_dp[3]        ; a~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.482      ;
; 0.333  ; dp:datapath|output_dp[3]        ; d~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.485      ;
; 0.333  ; dp:datapath|output_dp[3]        ; e~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.485      ;
; 0.341  ; dp:datapath|output_dp[3]        ; b~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.493      ;
; 0.341  ; dp:datapath|output_dp[3]        ; g~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.493      ;
; 0.345  ; dp:datapath|output_dp[3]        ; c~reg0                                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.497      ;
; 0.354  ; ctrl:controller|PC[0]           ; ctrl:controller|ADDRESS[0]               ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.001      ; 0.507      ;
; 0.355  ; ctrl:controller|PC[0]           ; ctrl:controller|ADDRESS[1]               ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.001      ; 0.508      ;
; 0.359  ; ctrl:controller|PC[0]           ; ctrl:controller|OPCODE[1]                ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.001      ; 0.512      ;
; 0.360  ; ctrl:controller|state.s0        ; ctrl:controller|imm[2]                   ; clk_cpu                         ; clk_cpu     ; 0.000        ; -0.001     ; 0.511      ;
; 0.362  ; ctrl:controller|PC[0]           ; ctrl:controller|OPCODE[2]                ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.001      ; 0.515      ;
; 0.362  ; ctrl:controller|PC[1]           ; ctrl:controller|IR[1]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.514      ;
; 0.370  ; ctrl:controller|PC[2]           ; ctrl:controller|IR[5]                    ; clk_cpu                         ; clk_cpu     ; 0.000        ; 0.000      ; 0.522      ;
+--------+---------------------------------+------------------------------------------+---------------------------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'ctrl:controller|alu_sct_ctrl[0]'                                                                                                                                  ;
+--------+---------------------------------+-----------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; Slack  ; From Node                       ; To Node                     ; Launch Clock                    ; Latch Clock                     ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------+-----------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; -1.543 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex1[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 2.012      ; 0.610      ;
; -1.481 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex0[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 2.013      ; 0.673      ;
; -1.462 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex3[0] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 2.009      ; 0.688      ;
; -1.043 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex1[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; -0.500       ; 2.012      ; 0.610      ;
; -0.981 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex0[1] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; -0.500       ; 2.013      ; 0.673      ;
; -0.962 ; ctrl:controller|alu_sct_ctrl[0] ; bcd7seg:bcd7seg_com|hex3[0] ; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; -0.500       ; 2.009      ; 0.688      ;
; 0.312  ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex0[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.225      ; 0.537      ;
; 0.323  ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex1[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.224      ; 0.547      ;
; 0.327  ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex3[0] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.221      ; 0.548      ;
; 0.346  ; ctrl:controller|alu_sct_ctrl[3] ; bcd7seg:bcd7seg_com|hex3[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.151      ; 0.497      ;
; 0.357  ; ctrl:controller|alu_sct_ctrl[2] ; bcd7seg:bcd7seg_com|hex2[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.209      ; 0.566      ;
; 0.369  ; ctrl:controller|alu_sct_ctrl[3] ; bcd7seg:bcd7seg_com|hex0[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.225      ; 0.594      ;
; 0.458  ; ctrl:controller|alu_sct_ctrl[1] ; bcd7seg:bcd7seg_com|hex1[1] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.224      ; 0.682      ;
; 0.480  ; ctrl:controller|alu_sct_ctrl[1] ; bcd7seg:bcd7seg_com|hex3[0] ; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 0.000        ; 0.221      ; 0.701      ;
+--------+---------------------------------+-----------------------------+---------------------------------+---------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk_cpu'                                                                          ;
+--------+--------------+----------------+------------------+---------+------------+---------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock   ; Clock Edge ; Target                          ;
+--------+--------------+----------------+------------------+---------+------------+---------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk_cpu ; Rise       ; clk_cpu                         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; a~reg0                          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; a~reg0                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; b~reg0                          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; b~reg0                          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|ADDRESS[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[2]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[2]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[4]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[4]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[5]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[5]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[6]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[6]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|IR[7]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|IR[7]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|OPCODE[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|OPCODE[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|OPCODE[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|OPCODE[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|OPCODE[2]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|OPCODE[2]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|PC[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|PC[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|PC[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|PC[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|PC[2]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|PC[2]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|acc_enb_ctrl    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|acc_enb_ctrl    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|alu_sct_ctrl[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|imm[0]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|imm[0]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|imm[1]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|imm[1]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|imm[2]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|imm[2]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|imm[3]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|imm[3]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[0]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[0]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[1]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[1]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[2]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[2]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[3]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[3]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[4]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[4]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[5]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[5]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[6]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[6]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|irs[7]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|irs[7]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|rf_enb_ctrl     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|rf_enb_ctrl     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|rf_sel_ctrl[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|rf_sel_ctrl[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|rf_sel_ctrl[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|rf_sel_ctrl[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.done      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.done      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s0        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s0        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s1        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s1        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s10       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s10       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s11       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s11       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s12       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s12       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s13       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s13       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s2        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s2        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s3        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s3        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s4        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_cpu ; Rise       ; ctrl:controller|state.s4        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_cpu ; Rise       ; ctrl:controller|state.s5        ;
+--------+--------------+----------------+------------------+---------+------------+---------------------------------+


+----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'ctrl:controller|alu_sct_ctrl[0]'                                                                            ;
+-------+--------------+----------------+------------------+---------------------------------+------------+------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                           ; Clock Edge ; Target                             ;
+-------+--------------+----------------+------------------+---------------------------------+------------+------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex0[1]        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex0[1]        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex1[1]        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex1[1]        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex2[1]        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex2[1]        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex3[0]        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex3[0]        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex3[1]        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg:bcd7seg_com|hex3[1]        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|Mux6~0|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex0[1]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex0[1]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex1[1]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex1[1]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex2[1]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex2[1]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex3[0]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex3[0]|datac          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex3[1]|datad          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; bcd7seg_com|hex3[1]|datad          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; controller|alu_sct_ctrl[0]|regout  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; ctrl:controller|alu_sct_ctrl[0] ; Rise       ; controller|alu_sct_ctrl[0]|regout  ;
+-------+--------------+----------------+------------------+---------------------------------+------------+------------------------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; rst_cpu   ; clk_cpu    ; 0.938  ; 0.938  ; Rise       ; clk_cpu         ;
; start_cpu ; clk_cpu    ; -0.201 ; -0.201 ; Rise       ; clk_cpu         ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; rst_cpu   ; clk_cpu    ; -0.118 ; -0.118 ; Rise       ; clk_cpu         ;
; start_cpu ; clk_cpu    ; 0.758  ; 0.758  ; Rise       ; clk_cpu         ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                           ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+
; Data Port      ; Clock Port                      ; Rise  ; Fall  ; Clock Edge ; Clock Reference                 ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+
; IRds[*]        ; clk_cpu                         ; 3.869 ; 3.869 ; Rise       ; clk_cpu                         ;
;  IRds[0]       ; clk_cpu                         ; 3.869 ; 3.869 ; Rise       ; clk_cpu                         ;
;  IRds[1]       ; clk_cpu                         ; 3.628 ; 3.628 ; Rise       ; clk_cpu                         ;
;  IRds[2]       ; clk_cpu                         ; 3.781 ; 3.781 ; Rise       ; clk_cpu                         ;
;  IRds[3]       ; clk_cpu                         ; 3.637 ; 3.637 ; Rise       ; clk_cpu                         ;
;  IRds[4]       ; clk_cpu                         ; 3.690 ; 3.690 ; Rise       ; clk_cpu                         ;
;  IRds[5]       ; clk_cpu                         ; 3.771 ; 3.771 ; Rise       ; clk_cpu                         ;
;  IRds[6]       ; clk_cpu                         ; 3.700 ; 3.700 ; Rise       ; clk_cpu                         ;
;  IRds[7]       ; clk_cpu                         ; 3.750 ; 3.750 ; Rise       ; clk_cpu                         ;
; a              ; clk_cpu                         ; 3.703 ; 3.703 ; Rise       ; clk_cpu                         ;
; b              ; clk_cpu                         ; 3.891 ; 3.891 ; Rise       ; clk_cpu                         ;
; c              ; clk_cpu                         ; 3.699 ; 3.699 ; Rise       ; clk_cpu                         ;
; d              ; clk_cpu                         ; 3.704 ; 3.704 ; Rise       ; clk_cpu                         ;
; e              ; clk_cpu                         ; 3.802 ; 3.802 ; Rise       ; clk_cpu                         ;
; f              ; clk_cpu                         ; 3.696 ; 3.696 ; Rise       ; clk_cpu                         ;
; g              ; clk_cpu                         ; 3.914 ; 3.914 ; Rise       ; clk_cpu                         ;
; output_cpu[*]  ; clk_cpu                         ; 3.875 ; 3.875 ; Rise       ; clk_cpu                         ;
;  output_cpu[0] ; clk_cpu                         ; 3.766 ; 3.766 ; Rise       ; clk_cpu                         ;
;  output_cpu[1] ; clk_cpu                         ; 3.875 ; 3.875 ; Rise       ; clk_cpu                         ;
;  output_cpu[2] ; clk_cpu                         ; 3.837 ; 3.837 ; Rise       ; clk_cpu                         ;
;  output_cpu[3] ; clk_cpu                         ; 3.786 ; 3.786 ; Rise       ; clk_cpu                         ;
; hex0[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 4.084 ; 4.084 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.040 ; 4.040 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.064 ; 4.064 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.084 ; 4.084 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.074 ; 4.074 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.074 ; 4.074 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex1[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 4.209 ; 4.209 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.040 ; 4.040 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.194 ; 4.194 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.194 ; 4.194 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.209 ; 4.209 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.209 ; 4.209 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex2[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 4.171 ; 4.171 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.972 ; 3.972 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.137 ; 4.137 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.137 ; 4.137 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.171 ; 4.171 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.171 ; 4.171 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex3[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 3.972 ; 3.972 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.972 ; 3.972 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.902 ; 3.902 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.902 ; 3.902 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.892 ; 3.892 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.892 ; 3.892 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+


+-----------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                   ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+
; Data Port      ; Clock Port                      ; Rise  ; Fall  ; Clock Edge ; Clock Reference                 ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+
; IRds[*]        ; clk_cpu                         ; 3.628 ; 3.628 ; Rise       ; clk_cpu                         ;
;  IRds[0]       ; clk_cpu                         ; 3.869 ; 3.869 ; Rise       ; clk_cpu                         ;
;  IRds[1]       ; clk_cpu                         ; 3.628 ; 3.628 ; Rise       ; clk_cpu                         ;
;  IRds[2]       ; clk_cpu                         ; 3.781 ; 3.781 ; Rise       ; clk_cpu                         ;
;  IRds[3]       ; clk_cpu                         ; 3.637 ; 3.637 ; Rise       ; clk_cpu                         ;
;  IRds[4]       ; clk_cpu                         ; 3.690 ; 3.690 ; Rise       ; clk_cpu                         ;
;  IRds[5]       ; clk_cpu                         ; 3.771 ; 3.771 ; Rise       ; clk_cpu                         ;
;  IRds[6]       ; clk_cpu                         ; 3.700 ; 3.700 ; Rise       ; clk_cpu                         ;
;  IRds[7]       ; clk_cpu                         ; 3.750 ; 3.750 ; Rise       ; clk_cpu                         ;
; a              ; clk_cpu                         ; 3.703 ; 3.703 ; Rise       ; clk_cpu                         ;
; b              ; clk_cpu                         ; 3.891 ; 3.891 ; Rise       ; clk_cpu                         ;
; c              ; clk_cpu                         ; 3.699 ; 3.699 ; Rise       ; clk_cpu                         ;
; d              ; clk_cpu                         ; 3.704 ; 3.704 ; Rise       ; clk_cpu                         ;
; e              ; clk_cpu                         ; 3.802 ; 3.802 ; Rise       ; clk_cpu                         ;
; f              ; clk_cpu                         ; 3.696 ; 3.696 ; Rise       ; clk_cpu                         ;
; g              ; clk_cpu                         ; 3.914 ; 3.914 ; Rise       ; clk_cpu                         ;
; output_cpu[*]  ; clk_cpu                         ; 3.766 ; 3.766 ; Rise       ; clk_cpu                         ;
;  output_cpu[0] ; clk_cpu                         ; 3.766 ; 3.766 ; Rise       ; clk_cpu                         ;
;  output_cpu[1] ; clk_cpu                         ; 3.875 ; 3.875 ; Rise       ; clk_cpu                         ;
;  output_cpu[2] ; clk_cpu                         ; 3.837 ; 3.837 ; Rise       ; clk_cpu                         ;
;  output_cpu[3] ; clk_cpu                         ; 3.786 ; 3.786 ; Rise       ; clk_cpu                         ;
; hex0[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 4.040 ; 4.040 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.040 ; 4.040 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.064 ; 4.064 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.084 ; 4.084 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.074 ; 4.074 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.074 ; 4.074 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex1[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 4.040 ; 4.040 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.040 ; 4.040 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.194 ; 4.194 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.194 ; 4.194 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.209 ; 4.209 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.209 ; 4.209 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex2[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 3.972 ; 3.972 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.972 ; 3.972 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.137 ; 4.137 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.137 ; 4.137 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.171 ; 4.171 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.171 ; 4.171 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex3[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 3.892 ; 3.892 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.972 ; 3.972 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.902 ; 3.902 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.902 ; 3.902 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.892 ; 3.892 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.892 ; 3.892 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+


+--------------------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                              ;
+----------------------------------+----------+---------+----------+---------+---------------------+
; Clock                            ; Setup    ; Hold    ; Recovery ; Removal ; Minimum Pulse Width ;
+----------------------------------+----------+---------+----------+---------+---------------------+
; Worst-case Slack                 ; -2.622   ; -2.799  ; N/A      ; N/A     ; -1.380              ;
;  clk_cpu                         ; -2.622   ; -2.546  ; N/A      ; N/A     ; -1.380              ;
;  ctrl:controller|alu_sct_ctrl[0] ; -0.926   ; -2.799  ; N/A      ; N/A     ; 0.500               ;
; Design-wide TNS                  ; -138.894 ; -29.836 ; 0.0      ; 0.0     ; -112.38             ;
;  clk_cpu                         ; -135.433 ; -21.734 ; N/A      ; N/A     ; -112.380            ;
;  ctrl:controller|alu_sct_ctrl[0] ; -3.461   ; -8.102  ; N/A      ; N/A     ; 0.000               ;
+----------------------------------+----------+---------+----------+---------+---------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; rst_cpu   ; clk_cpu    ; 2.416 ; 2.416 ; Rise       ; clk_cpu         ;
; start_cpu ; clk_cpu    ; 0.368 ; 0.368 ; Rise       ; clk_cpu         ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; rst_cpu   ; clk_cpu    ; -0.118 ; -0.118 ; Rise       ; clk_cpu         ;
; start_cpu ; clk_cpu    ; 0.858  ; 0.858  ; Rise       ; clk_cpu         ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                           ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+
; Data Port      ; Clock Port                      ; Rise  ; Fall  ; Clock Edge ; Clock Reference                 ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+
; IRds[*]        ; clk_cpu                         ; 6.850 ; 6.850 ; Rise       ; clk_cpu                         ;
;  IRds[0]       ; clk_cpu                         ; 6.850 ; 6.850 ; Rise       ; clk_cpu                         ;
;  IRds[1]       ; clk_cpu                         ; 6.352 ; 6.352 ; Rise       ; clk_cpu                         ;
;  IRds[2]       ; clk_cpu                         ; 6.636 ; 6.636 ; Rise       ; clk_cpu                         ;
;  IRds[3]       ; clk_cpu                         ; 6.362 ; 6.362 ; Rise       ; clk_cpu                         ;
;  IRds[4]       ; clk_cpu                         ; 6.414 ; 6.414 ; Rise       ; clk_cpu                         ;
;  IRds[5]       ; clk_cpu                         ; 6.628 ; 6.628 ; Rise       ; clk_cpu                         ;
;  IRds[6]       ; clk_cpu                         ; 6.423 ; 6.423 ; Rise       ; clk_cpu                         ;
;  IRds[7]       ; clk_cpu                         ; 6.605 ; 6.605 ; Rise       ; clk_cpu                         ;
; a              ; clk_cpu                         ; 6.444 ; 6.444 ; Rise       ; clk_cpu                         ;
; b              ; clk_cpu                         ; 6.891 ; 6.891 ; Rise       ; clk_cpu                         ;
; c              ; clk_cpu                         ; 6.446 ; 6.446 ; Rise       ; clk_cpu                         ;
; d              ; clk_cpu                         ; 6.448 ; 6.448 ; Rise       ; clk_cpu                         ;
; e              ; clk_cpu                         ; 6.677 ; 6.677 ; Rise       ; clk_cpu                         ;
; f              ; clk_cpu                         ; 6.441 ; 6.441 ; Rise       ; clk_cpu                         ;
; g              ; clk_cpu                         ; 6.916 ; 6.916 ; Rise       ; clk_cpu                         ;
; output_cpu[*]  ; clk_cpu                         ; 6.856 ; 6.856 ; Rise       ; clk_cpu                         ;
;  output_cpu[0] ; clk_cpu                         ; 6.620 ; 6.620 ; Rise       ; clk_cpu                         ;
;  output_cpu[1] ; clk_cpu                         ; 6.856 ; 6.856 ; Rise       ; clk_cpu                         ;
;  output_cpu[2] ; clk_cpu                         ; 6.721 ; 6.721 ; Rise       ; clk_cpu                         ;
;  output_cpu[3] ; clk_cpu                         ; 6.644 ; 6.644 ; Rise       ; clk_cpu                         ;
; hex0[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 7.794 ; 7.794 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.740 ; 7.740 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.772 ; 7.772 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.794 ; 7.794 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.784 ; 7.784 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.784 ; 7.784 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex1[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 8.063 ; 8.063 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.740 ; 7.740 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 8.034 ; 8.034 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 8.034 ; 8.034 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 8.063 ; 8.063 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 8.063 ; 8.063 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex2[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 7.995 ; 7.995 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.548 ; 7.548 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.960 ; 7.960 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.960 ; 7.960 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.995 ; 7.995 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.995 ; 7.995 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex3[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 7.548 ; 7.548 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.548 ; 7.548 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.387 ; 7.387 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.387 ; 7.387 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.377 ; 7.377 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 7.377 ; 7.377 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+


+-----------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                   ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+
; Data Port      ; Clock Port                      ; Rise  ; Fall  ; Clock Edge ; Clock Reference                 ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+
; IRds[*]        ; clk_cpu                         ; 3.628 ; 3.628 ; Rise       ; clk_cpu                         ;
;  IRds[0]       ; clk_cpu                         ; 3.869 ; 3.869 ; Rise       ; clk_cpu                         ;
;  IRds[1]       ; clk_cpu                         ; 3.628 ; 3.628 ; Rise       ; clk_cpu                         ;
;  IRds[2]       ; clk_cpu                         ; 3.781 ; 3.781 ; Rise       ; clk_cpu                         ;
;  IRds[3]       ; clk_cpu                         ; 3.637 ; 3.637 ; Rise       ; clk_cpu                         ;
;  IRds[4]       ; clk_cpu                         ; 3.690 ; 3.690 ; Rise       ; clk_cpu                         ;
;  IRds[5]       ; clk_cpu                         ; 3.771 ; 3.771 ; Rise       ; clk_cpu                         ;
;  IRds[6]       ; clk_cpu                         ; 3.700 ; 3.700 ; Rise       ; clk_cpu                         ;
;  IRds[7]       ; clk_cpu                         ; 3.750 ; 3.750 ; Rise       ; clk_cpu                         ;
; a              ; clk_cpu                         ; 3.703 ; 3.703 ; Rise       ; clk_cpu                         ;
; b              ; clk_cpu                         ; 3.891 ; 3.891 ; Rise       ; clk_cpu                         ;
; c              ; clk_cpu                         ; 3.699 ; 3.699 ; Rise       ; clk_cpu                         ;
; d              ; clk_cpu                         ; 3.704 ; 3.704 ; Rise       ; clk_cpu                         ;
; e              ; clk_cpu                         ; 3.802 ; 3.802 ; Rise       ; clk_cpu                         ;
; f              ; clk_cpu                         ; 3.696 ; 3.696 ; Rise       ; clk_cpu                         ;
; g              ; clk_cpu                         ; 3.914 ; 3.914 ; Rise       ; clk_cpu                         ;
; output_cpu[*]  ; clk_cpu                         ; 3.766 ; 3.766 ; Rise       ; clk_cpu                         ;
;  output_cpu[0] ; clk_cpu                         ; 3.766 ; 3.766 ; Rise       ; clk_cpu                         ;
;  output_cpu[1] ; clk_cpu                         ; 3.875 ; 3.875 ; Rise       ; clk_cpu                         ;
;  output_cpu[2] ; clk_cpu                         ; 3.837 ; 3.837 ; Rise       ; clk_cpu                         ;
;  output_cpu[3] ; clk_cpu                         ; 3.786 ; 3.786 ; Rise       ; clk_cpu                         ;
; hex0[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 4.040 ; 4.040 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.040 ; 4.040 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.064 ; 4.064 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.084 ; 4.084 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.074 ; 4.074 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex0[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.074 ; 4.074 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex1[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 4.040 ; 4.040 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.040 ; 4.040 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.194 ; 4.194 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.194 ; 4.194 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.209 ; 4.209 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex1[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.209 ; 4.209 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex2[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 3.972 ; 3.972 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.972 ; 3.972 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.137 ; 4.137 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.137 ; 4.137 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.171 ; 4.171 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex2[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 4.171 ; 4.171 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
; hex3[*]        ; ctrl:controller|alu_sct_ctrl[0] ; 3.892 ; 3.892 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[0]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.972 ; 3.972 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[1]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.902 ; 3.902 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[2]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.902 ; 3.902 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[3]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.892 ; 3.892 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
;  hex3[6]       ; ctrl:controller|alu_sct_ctrl[0] ; 3.892 ; 3.892 ; Rise       ; ctrl:controller|alu_sct_ctrl[0] ;
+----------------+---------------------------------+-------+-------+------------+---------------------------------+


+---------------------------------------------------------------------------------------------------------------+
; Setup Transfers                                                                                               ;
+---------------------------------+---------------------------------+----------+----------+----------+----------+
; From Clock                      ; To Clock                        ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+---------------------------------+---------------------------------+----------+----------+----------+----------+
; clk_cpu                         ; clk_cpu                         ; 594      ; 0        ; 0        ; 0        ;
; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu                         ; 53       ; 53       ; 0        ; 0        ;
; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 8        ; 0        ; 0        ; 0        ;
; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 3        ; 3        ; 0        ; 0        ;
+---------------------------------+---------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+---------------------------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                                ;
+---------------------------------+---------------------------------+----------+----------+----------+----------+
; From Clock                      ; To Clock                        ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+---------------------------------+---------------------------------+----------+----------+----------+----------+
; clk_cpu                         ; clk_cpu                         ; 594      ; 0        ; 0        ; 0        ;
; ctrl:controller|alu_sct_ctrl[0] ; clk_cpu                         ; 53       ; 53       ; 0        ; 0        ;
; clk_cpu                         ; ctrl:controller|alu_sct_ctrl[0] ; 8        ; 0        ; 0        ; 0        ;
; ctrl:controller|alu_sct_ctrl[0] ; ctrl:controller|alu_sct_ctrl[0] ; 3        ; 3        ; 0        ; 0        ;
+---------------------------------+---------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 2     ; 2    ;
; Unconstrained Input Port Paths  ; 113   ; 113  ;
; Unconstrained Output Ports      ; 39    ; 39   ;
; Unconstrained Output Port Paths ; 39    ; 39   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Web Edition
    Info: Processing started: Mon Dec 03 18:01:11 2018
Info: Command: quartus_sta Contador -c Contador
Info: qsta_default_script.tcl version: #1
Warning (136002): Ignored duplicate of assignment PARTITION_SOURCE for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_PRESERVE_HIGH_SPEED_TILES for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_IGNORE_SOURCE_FILE_CHANGES for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_ALWAYS_USE_QXP_NETLIST for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_IMPORT_NEW_ASSIGNMENTS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_IMPORT_EXISTING_ASSIGNMENTS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_IMPORT_EXISTING_LOGICLOCK_REGIONS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_IMPORT_PIN_ASSIGNMENTS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_IMPORT_PROMOTE_ASSIGNMENTS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_TYPE for node ""
Warning (136002): Ignored duplicate of assignment ALLOW_MULTIPLE_PERSONAS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_ASD_REGION_ID for node ""
Warning (136002): Ignored duplicate of assignment CROSS_BOUNDARY_OPTIMIZATIONS for node ""
Warning (136002): Ignored duplicate of assignment PROPAGATE_CONSTANTS_ON_INPUTS for node ""
Warning (136002): Ignored duplicate of assignment PROPAGATE_INVERSIONS_ON_INPUTS for node ""
Warning (136002): Ignored duplicate of assignment REMOVE_LOGIC_ON_UNCONNECTED_OUTPUTS for node ""
Warning (136002): Ignored duplicate of assignment MERGE_EQUIVALENT_INPUTS for node ""
Warning (136002): Ignored duplicate of assignment MERGE_EQUIVALENT_BIDIRS for node ""
Warning (136002): Ignored duplicate of assignment ABSORB_PATHS_FROM_OUTPUTS_TO_INPUTS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_EXTRACT_HARD_BLOCK_NODES for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_BACK_ANNOTATION for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_COLOR for node ""
Warning (136002): Ignored duplicate of assignment HIERARCHY_BLACKBOX_FILE for node "|"
Warning (136002): Ignored duplicate of assignment PARTITION_SOURCE for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_PRESERVE_HIGH_SPEED_TILES for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_IGNORE_SOURCE_FILE_CHANGES for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_ALWAYS_USE_QXP_NETLIST for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_IMPORT_NEW_ASSIGNMENTS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_IMPORT_EXISTING_ASSIGNMENTS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_IMPORT_EXISTING_LOGICLOCK_REGIONS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_IMPORT_PIN_ASSIGNMENTS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_IMPORT_PROMOTE_ASSIGNMENTS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_TYPE for node ""
Warning (136002): Ignored duplicate of assignment ALLOW_MULTIPLE_PERSONAS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_ASD_REGION_ID for node ""
Warning (136002): Ignored duplicate of assignment CROSS_BOUNDARY_OPTIMIZATIONS for node ""
Warning (136002): Ignored duplicate of assignment PROPAGATE_CONSTANTS_ON_INPUTS for node ""
Warning (136002): Ignored duplicate of assignment PROPAGATE_INVERSIONS_ON_INPUTS for node ""
Warning (136002): Ignored duplicate of assignment REMOVE_LOGIC_ON_UNCONNECTED_OUTPUTS for node ""
Warning (136002): Ignored duplicate of assignment MERGE_EQUIVALENT_INPUTS for node ""
Warning (136002): Ignored duplicate of assignment MERGE_EQUIVALENT_BIDIRS for node ""
Warning (136002): Ignored duplicate of assignment ABSORB_PATHS_FROM_OUTPUTS_TO_INPUTS for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_EXTRACT_HARD_BLOCK_NODES for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_BACK_ANNOTATION for node ""
Warning (136002): Ignored duplicate of assignment PARTITION_COLOR for node ""
Warning (136002): Ignored duplicate of assignment HIERARCHY_BLACKBOX_FILE for node "|"
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 29 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'Contador.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk_cpu clk_cpu
    Info (332105): create_clock -period 1.000 -name ctrl:controller|alu_sct_ctrl[0] ctrl:controller|alu_sct_ctrl[0]
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -2.622
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.622      -135.433 clk_cpu 
    Info (332119):    -0.926        -3.461 ctrl:controller|alu_sct_ctrl[0] 
Info (332146): Worst-case hold slack is -2.799
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.799        -8.102 ctrl:controller|alu_sct_ctrl[0] 
    Info (332119):    -2.546       -21.734 clk_cpu 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380      -112.380 clk_cpu 
    Info (332119):     0.500         0.000 ctrl:controller|alu_sct_ctrl[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.471
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.471       -13.841 clk_cpu 
    Info (332119):     0.094         0.000 ctrl:controller|alu_sct_ctrl[0] 
Info (332146): Worst-case hold slack is -1.586
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.586       -21.017 clk_cpu 
    Info (332119):    -1.543        -4.486 ctrl:controller|alu_sct_ctrl[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380      -112.380 clk_cpu 
    Info (332119):     0.500         0.000 ctrl:controller|alu_sct_ctrl[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 51 warnings
    Info: Peak virtual memory: 4571 megabytes
    Info: Processing ended: Mon Dec 03 18:01:12 2018
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


